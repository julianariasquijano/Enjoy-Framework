<?php

//TODO create app repository

function createaDataRepFile($fileName,$app) {
    
    $content='<?php

require_once "lib/dataRepositories/interfaces.php";

class '.$app.'DataRep implements dataRep_Interface {

    var $instance=null;
    var $host;
    var $dbname;
    var $username;
    var $password;    
    
    function __construct() {
        
        $this->host	= "localhost";
        $this->dbname 	= "'.$app.'";
        $this->username = "";
        $this->password = "";        
        
    }

    function getInstance() {

        $this->instance = new PDO("mysql:host=" . $this->host . ";dbname=" . $this->dbname, $this->username, $this->password);
        $this->instance->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
        
        return $this->instance;
        
    }
    
    function close() {
        $this->instance = null;
    }

    public function dbExists($dataBase=null) {
        
        if ($dataBase == null) $dataBase=$this->dbname;
        
        $sql="SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME=\'$dataBase\'";
        $query = $this->dataRep->prepare($sql);
        $query->execute();
        $results = $query->fetchAll(PDO::FETCH_ASSOC);
        
        if (count($results)) {
            return true;
        }
        else return false;
        
    }

    public function __destruct() {
        $this->close();
    }

}';
    createFile($fileName,$content);
    
}
function createModel($fileName,$app,$module) {
    
    $content='<?php

//Model Class

require_once "lib/enjoyClassBase/modelBase.php";
require_once "applications/'.$app.'/modules/'.$module.'/models/table_'.$module.'.php";

class '.$module.'Model extends modelBase {

    var $tables="'.$module.'";

    function __construct($dataRep, &$config,&$incomingModels=array()) {
        parent::__construct($dataRep, $config,$incomingModels);
        $table=new table_'.$module.'();
        $this->fieldsConfig=$table->fieldsConfig;
        $this->primaryKey=$table->primaryKey;
        
        //$---Model=$this->getModuleModelInstance("---");
                
        $this->label=array(
            "es_es"=>"You Should set the label of the Module.",
        );
        
//        $this->foreignKeys = array (
//            "id_---" => array(
//                "model"=>&$---Model,
//                "keyField"=>"theOthertableName.idPossibly",
//                "dataField"=>"another Field of the foreign table with data",
//             ),
//        );

//        $this->subModels=array( //For many to many relations for example
//            0=>array(
//                "model"=>&$---Model ,
//                "linkerField"=>$this->primaryKey,
//                "linkedField"=>"external field that references this primary key",
//                "linkedDataField"=>"similar as a foreignKey dataField",
//                "type"=>"multiple",
//            ),
//        );

//        $this->dependents=array(
//            "id"=>array(
//                0=>array(
//                  "mod"=>"someModule",
//                    "act"=>"index",
//                    "keyField"=>"field of the dependent table that references here",
//                    "label"=>array(
//                        "es_es" =>"DependentCaption",
//                    ),
//                ),              
//            ),
//        );

    }
    
}';
    
    createFile($fileName,$content);
}
function createModelTable($fileName,$module) {
    
    $content='<?php

class table_'.$module.' {

    var $primaryKey = "id";
    var $fieldsConfig;

    function __construct() {

        $this->fieldsConfig = array(
            "id" => array(
                "definition" => array(
                    "type" => "number",
                    //"options"=>array("required"),
                    "default" => "",
                    "label" => array(
                        "es_es" => "Serial",
                    ),
                    //"widget" => "textarea",
                ),
                //"viewsPresence"=>array("list","createForm","editForm","editFkForm"),
            ),
        );
    }        
}   ';

    createFile($fileName,$content);
}
function createView($fileName) {
    
    $content='<span style="font-size: xx-large;">&nbsp;&nbsp;<?php  echo $label  ?></span>
<br/>
<?php echo $crud  ?>';
    
    createFile($fileName,$content);
}
function createController($fileName) {
    
    $content='<?php
        
//Module Controller Class
require_once "lib/enjoyClassBase/controllerBase.php";

class modController extends controllerBase {

/*
    function __construct(&$config) {
       
        $this->bpmFlow=array(
            "initialState"=>"someState",
            "defaultInfo"=>array(),
            "states"=>array( //The diferent states that the process can have
                "state1"=>array(
                    "label"=>array(
                        "es_es"=>"",
                    ),
                    "actions"=>array( //This actions must be defined as controller actions
                        "action1"=>array(
                            "label"=>array(
                                "es_es"=>"",
                            ),
                            "results"=>array(""),//array of possible result states
                        ),
                    )
                ),
            ),
        );
        
        parent::__construct($config);
    }

*/
    function indexAction() {
        $this->crud($this->baseModel,$this->dataRep);
    }

}';
    createFile($fileName,$content);

}

function createConfigFile($fileName) {
    
    $content='<?php

//Application Configuration

$config=array(
    "base"=>array(
        "appTitle"=>array(
            "es_es"=>"Put a Title Here",
        ),
        "appIcon"=>"assets/images/icons/icon_32_computer.png",
        "crudHelper"=>"generic",
        "enjoyHelper"=>"kendoui",
        "language"=>"es_es",
        "defaultModule"=>"",
        "defaultAction"=>"index",
        "errorLog"=>false,
        "debug"=>false,
        "useAuthentication"=>true, //Defines if the application use permissions schema
        "publicActions"=>array( //In concordance with useAuthentication = true when some action modules does not require authentication
            //"module"=>array("action",),
        ),         
        
    ),
    "helpers"=>array(
        "crud_listMaxLines"=>"50000",
        "crud_encryptPrimaryKeys"=>true,
        
    ),
    "menu"=>array(
        //language => menu// last item points to a url
        
        "es_es"=>array(
            "Module Title" => "index.php?app=appName&mod=modName",
        ),
    ),
)

?>';
    
    createFile($fileName,$content);
}
function createLayoutFile($fileName) {
    
    $content='<html>
    <head>
        <?php require "assets/headTemplate.php"; ?>
    </head>

    <body id="body" style="overflow: auto !important;visibility: hidden">
        <?php  require_once $viewFile;  ?>
    </body>
</html>';
    
    createFile($fileName,$content);
}
function createSetupFile($fileName,$app) {
    
    $content='<?php

require_once "./applications/'.$app.'/dataRep/app_dataRep.php"; //Brings app_dataRep()

class '.$app.'Setup {

    var $dataRep;
    var $appServerConfig;
    
    function __construct($config) {
        $this->appServerConfig=$config;
    }
    
    function run() {
        
        $this->dataRep = new '.$app.'DataRep();
        
        try {
            $this->dataRep->getInstance();
        } catch (Exception $exc) {
            return array(false,"Error accessing the Data Base {$dataRepObject->dbname} - ".$exc->getMessage());
        }

        try {
            $this->populateDb();
        } catch (Exception $exc) {
           return array(false,"Error populating the Data Base. ".$exc->getMessage());
        }

        return array(true,"ok.");
    }
    
    function populateDb() {
        
        #Structure
        
        $sql="


        ";
        
        $query = $this->dataRep->pdo->prepare($sql);
        $query->execute();
    
    }

}

?>';
    
    createFile($fileName,$content);
}



function createFile($fileName,$content) {
    $handle = fopen($fileName, "a+");
    fwrite($handle, $content);
    fclose($handle);
}


require_once "../applications/appServerConfig.php"; //Expose variable $appServerConfig

if ($appServerConfig['base']['platform']=='windows')
    $ds="\\"; // Directory Separator
else
    $ds="/";



/*
 * Start
 */

if (count($argv) < 3) {
    exit ("\r\ncrud_start.enj Builds the crud structure.\r\nEj:php crud_start.enj \"appName\" \"module1,module2,etc\")\r\nRemember to have correspondence between the names of the modules and the DB tables.\r\n\r\n");
}

$app=$argv[1];
$modules=$argv[2];
$modulesArray=explode(',', $modules);

$dataRepDir='..'.$ds."applications".$ds.$app.$ds."dataRep";
$dataRepFile=$dataRepDir.$ds."app_dataRep.php";

if (!file_exists($dataRepDir)) {
    mkdir($dataRepDir, '0770', TRUE);
}
if (!file_exists($dataRepFile)) {
    createaDataRepFile($dataRepFile,$app);
}

foreach ($modulesArray as $module) {
    $modulePath='..'.$ds."applications".$ds.$app.$ds."modules".$ds.$module;
    $modelsPath=$modulePath.$ds."models";
    $viewsPath=$modulePath.$ds."views";
    
    if (!file_exists($modulePath)) {
        mkdir($modulePath, '0770', TRUE);
    }
    if (!file_exists($modelsPath)) {
        mkdir($modelsPath, '0770', TRUE);
    }
    if (!file_exists($viewsPath)) {
        mkdir($viewsPath, '0770', TRUE);
    }
    
    $modelFileName=$modelsPath.$ds."model_$module.php";
    $modelTableFileName=$modelsPath.$ds."table_$module.php";
    $viewFileName=$viewsPath.$ds."view_index.php";
    $controllerFileName=$modulePath.$ds."controller_$module.php";
    
    if (!file_exists($modelFileName)) {
        createModel($modelFileName,$app,$module);
    }
    if (!file_exists($modelTableFileName)) {
        createModelTable($modelTableFileName,$module);
    }
    if (!file_exists($viewFileName)) {
        createView($viewFileName);
    }
    if (!file_exists($controllerFileName)) {
        createController($controllerFileName);
    }
    
    
}

$appPath='..'.$ds."applications".$ds.$app;
$configFile=$appPath.$ds.'config.php';
$layoutFile=$appPath.$ds.'layout.php';
$setupFile=$appPath.$ds.'setup.php';


if (!file_exists($configFile)) {
    createConfigFile($configFile);
}
if (!file_exists($layoutFile)) {
    createLayoutFile($layoutFile);
}
if (!file_exists($setupFile)) {
    createSetupFile($setupFile,$app);
}